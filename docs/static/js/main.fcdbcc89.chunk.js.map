{"version":3,"sources":["helpers/fetch.js","features/notes/notesSlice.js","features/auth/authSlice.js","store/store.js","components/auth/LoadingScreen.jsx","hooks/useForm.js","components/notes/NotesScreen.jsx","components/journal/NothingSelected.jsx","components/journal/NewEntry.jsx","components/journal/JournalEntries.jsx","components/journal/Sidebar.jsx","components/journal/JournalScreen.jsx","components/auth/LoginScreen.jsx","components/auth/RegisterScreen.jsx","routes/AuthRouter.jsx","routes/PrivateRoutes.jsx","routes/PublicRoutes.jsx","routes/AppRouter.jsx","JournalApp.jsx","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","a","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","startNewNote","createAsyncThunk","sech","dispatch","date","moment","format","newNote","title","resp","json","id","nota","ok","addNewNote","setActiveNote","startGetNotes","notas","startUpdateNote","startDeleteNote","clearActive","notesSlice","createSlice","name","initialState","notes","active","reducers","state","action","payload","clearNotes","extraReducers","fulfilled","map","n","filter","actions","startUserLogin","email","password","console","log","setItem","Date","getTime","userLogin","lastName","uid","setMsgError","msg","startUserRegister","startChecking","user","checking","msgError","authSlice","userLogOut","removeItem","clearMsgError","rejected","pending","store","configureStore","reducer","notesReducer","auth","authReducer","LoadingScreen","className","useForm","initialstate","useState","values","setValues","reset","newFormState","handleInputChange","target","value","NotesScreen","note","useSelector","useDispatch","activeId","useRef","useEffect","current","onClick","type","placeholder","onChange","NothingSelected","NewEntry","JournalEntries","e","Sidebar","JournalScreen","LoginScreen","isValidEmail","msgEmail","isValidPassword","msgPassword","isValid","setIsValid","htmlFor","autoComplete","preventDefault","validator","isEmail","trim","length","to","src","alt","RegisterScreen","password2","isValidPasword","isValidPasword2","isValidName","msgName","msgPasword","validValues","setValidValues","AuthRouter","exact","path","component","PrivateRoutes","isLoggedIn","Component","rest","props","PublicRoutes","AppRouter","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fcdbcc89.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = async ( endpoint, data, method='GET' ) => {\n\n    const url = `${baseUrl}/${endpoint}`;\n    \n    if( method === 'GET'){\n        return fetch(url);\n    }else{\n        \n        return fetch(url, {\n            method,\n            headers:{\n                'Content-type':'application/json',\n            },\n            body: JSON.stringify( data )\n        });\n    }\n\n}\n\nconst fetchConToken = async ( endpoint, data, method='GET' ) => {\n\n    const url = `${baseUrl}/${endpoint}`;\n    const token = localStorage.getItem('token') || '';\n\n    if( method === 'GET'){\n        return fetch(url,{\n            method,\n            headers:{\n                'x-token':token\n            }\n        });\n    }else{\n        \n        return fetch(url, {\n            method,\n            headers:{\n                'Content-type':'application/json',\n                'x-token':token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n\n}\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}\n\n","import { createSlice,createAsyncThunk } from \"@reduxjs/toolkit\";\nimport moment from 'moment';\nimport { fetchConToken} from \"../../helpers/fetch\";\n\nexport const startNewNote = createAsyncThunk(\n    \"notes/Start New Note\",\n    async (sech,{dispatch}) => {\n\n        const date = moment().format();\n        const newNote = {\n            title:' ',\n            body:' ',\n            date\n        }\n\n        const resp = await fetchConToken('notes/',newNote,'POST');\n        const body = await resp.json();\n        const id = body.nota.id;\n        \n        if(body.ok){\n            dispatch(addNewNote({body:'',title:'',id,date}));\n            dispatch(setActiveNote({body:'',title:'',id,date}));\n        }\n    }\n);\n\nexport const startGetNotes = createAsyncThunk(\n    'notes/ Start geting notes',\n    async (id) => {\n        \n        const resp = await fetchConToken(`notes/${id}`);\n        const body = await resp.json();\n        if(body.ok){\n            return body.notas;\n        }\n        \n    }\n);\n\nexport const startUpdateNote = createAsyncThunk(\n    \"notes/ Start updating note\",\n    async (nota,{dispatch}) => {\n        //console.log(nota.id);\n        const resp = await fetchConToken(`notes/${nota.id}`,nota,'PUT');\n        const body = await resp.json();\n        if(body.ok){\n            return nota;\n        }\n        \n    }\n);\n\nexport const startDeleteNote = createAsyncThunk(\n    'notes/ Start deleting note',\n    async (id,{dispatch}) => {\n\n        const resp = await fetchConToken(`notes/${id}`,{},'DELETE');\n        const body = await resp.json();\n        //console.log(body);\n        if(body.ok){\n            dispatch(clearActive());\n            return id;\n        }\n    }\n)\n\nconst initialState = {\n    notes:null,\n    active:null,\n\n}\n\nexport const notesSlice = createSlice({\n    name:'notes',\n    initialState,\n    reducers:{\n        addNewNote:(state,action) => {\n            state.notes = [...state.notes,action.payload];\n        },\n        setActiveNote:(state,action) => {\n            \n            state.active = action.payload;\n        },\n        clearActive:(state) => {\n            state.active = null;\n        },\n        clearNotes:(state,action)=>{\n            state.notes=null;\n        }\n        \n    },\n    extraReducers:{\n        [startGetNotes.fulfilled]:(state,action)=>{\n            state.notes = action.payload;\n        },\n        [startUpdateNote.fulfilled]:(state,action)=>{\n            state.notes = state.notes.map(n => (n.id === state.active.id) ? action.payload : n);\n        },\n        [startDeleteNote.fulfilled]:(state,action) => {\n            state.notes = state.notes.filter(n => n.id !== action.payload ); \n        }\n    }\n});    \n\nexport const {\n    addNewNote,\n    setActiveNote,\n    clearActive,\n    clearNotes\n} = notesSlice.actions;\n\nexport default notesSlice.reducer;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchConToken, fetchSinToken } from \"../../helpers/fetch\";\n\nexport const startUserLogin = createAsyncThunk(\n    \"auth/Start Login User\",\n    async ({email,password},{dispatch}) =>{\n\n        const resp =  await fetchSinToken('auth',{email,password},'POST');\n        const body =  await resp.json();\n        console.log(body);\n        if(body.ok){\n            localStorage.setItem('token',body.token);\n            localStorage.setItem('token-init-date',new Date().getTime());\n            dispatch(userLogin({\n                name:body.name,\n                lastName:body.lastName,\n                id:body.uid\n            }));\n        }else{\n            dispatch(setMsgError(body.msg));\n\n        }\n        \n  \n    });\n\nexport const startUserRegister = createAsyncThunk(\n    \"auth/Start Register User\",\n    async ({email,password,name,lastName},{dispatch}) => {\n        \n        const resp = await fetchSinToken('auth/new',{email,password,name,lastName},'POST');\n        const body = await resp.json();\n        console.log(body);\n        if(body.ok){\n            localStorage.setItem('token',body.token);\n            localStorage.setItem('token-init-date',new Date().getTime());\n            dispatch(userLogin({\n                name:body.name,\n                lastName:body.lastName,\n                id:body.uid\n            }));\n        }else{\n            dispatch(setMsgError(body.msg));\n        }\n    }\n);\n\nexport const startChecking = createAsyncThunk(\n    \"auth/Start Checking\",\n    async (data,{dispatch}) => {\n\n        const resp = await fetchConToken('auth/renew');\n        const body = await resp.json();\n\n        if(body.ok){\n            localStorage.setItem('token',body.token);\n            localStorage.setItem('token-init-date',new Date().getTime());\n            dispatch(userLogin({\n                name:body.name,\n                lastName:body.lastName,\n                id:body.uid\n            }));\n        }\n    }\n);\n\n\nconst initialState = {\n    user:{\n        email:'',\n        uid:''\n    },\n    checking:null,\n    msgError:null\n}\n\nexport const authSlice = createSlice({\n    name:'auth',\n    initialState,\n    reducers:{\n        userLogin:(state,action)=>{\n            state.user = action.payload;\n\n        },\n        userLogOut:(state,action)=>{\n            state.user = initialState.user;\n            localStorage.removeItem('token');\n            localStorage.removeItem('token-init-date');\n        },\n        setMsgError:(state,action)=>{\n            state.msgError = action.payload;\n        },\n        clearMsgError:(state)=>{\n            state.msgError = null;\n        }\n    },\n    extraReducers:{\n        [startUserLogin.rejected]:(state,action)=>{\n\n        },\n        [startUserLogin.pending]:(state)=>{\n            state.checking = true\n        },\n        [startUserLogin.fulfilled]:(state,action)=>{\n         \n            state.checking = false\n        },\n        [startChecking.pending]:(state)=>{\n            state.checking = true\n        },\n        [startChecking.fulfilled]:(state)=>{\n            state.checking = false\n        },\n        [startChecking.rejected]:(state)=>{\n            state.checking = true\n        },\n    }\n});\n\nexport const {userLogin,userLogOut,setMsgError,clearMsgError} = authSlice.actions;\n\nexport default authSlice.reducer;","import { configureStore } from '@reduxjs/toolkit'\nimport notesReducer from \"../features/notes/notesSlice\";\nimport authReducer from \"../features/auth/authSlice\";\n\nexport const store = configureStore({\n  reducer: {\n      notes:notesReducer,\n      auth:authReducer\n    },\n})","export const LoadingScreen = () => {\n    return (\n        <>\n           <div className=\"s\">\n                <div className=\"auth__checking\">\n                    <h1>Checando la información antes de acceder a la aplicación</h1>\n                    <h3>Este proceso puede tardar unos segundos. </h3>\n                    <p>Redireccionano...</p>\n                    <br />\n                    <br />\n                    <p>Aplicación desarrollada en React</p>\n                </div>\n           </div>\n        </>   \n    )\n}\n","import {useState} from 'react';\n\nexport const useForm = (initialstate = {}) => {\n\n    const [values, setValues] = useState(initialstate);\n\n\n    const reset = (newFormState = initialstate) => {\n        setValues(newFormState);\n    }\n\n    const handleInputChange = ({target}) => {\n\n        setValues({\n            ...values,\n            //description : h\n            [target.name]: target.value \n             \n        });\n    }\n\n    return [values,handleInputChange,reset];\n\n}","import React, { useEffect,useRef } from 'react'\nimport moment from 'moment';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setActiveNote, startDeleteNote, startUpdateNote} from '../../features/notes/notesSlice';\nimport { useForm } from '../../hooks/useForm';\n\nexport const NotesScreen = () => {\n    const {active:note} = useSelector(state => state.notes);\n    const [values,handleInputChange,reset] = useForm(note);\n    const {title,body} = values;\n    const dispatch = useDispatch(); \n\n    const handleUpdateNote = () => {\n        dispatch(startUpdateNote(note));\n    }\n\n    const handleDelete = () => {\n        console.log('deleting note');\n        dispatch(startDeleteNote(note.id));\n    }\n\n    const activeId = useRef(note.id);\n\n    useEffect(() => {\n        if(note.id !== activeId.current){\n            reset(note);\n            activeId.current = note.id;\n        }\n        \n    }, [note,reset]);\n    \n    useEffect(() => {\n        dispatch(setActiveNote({id:values.id,...values}));\n    }, [values,dispatch]);\n\n    return (\n        <div className=\"notes \">\n            <div className=\"notes__top\">\n                <div >\n                    <p>{moment(note.date).format('LL')}</p>\n                </div>\n                <button \n                    onClick={handleUpdateNote}\n                    className=\"btn btn-primary\">\n                    Guardar\n                </button>\n            </div>\n            <div className=\"notes__content\">\n                <input \n                    type=\"text\"\n                    className=\"notes__input\"\n                    name=\"title\"\n                    value={title}\n                    placeholder=\"Escriba algún título\"\n                    onChange={handleInputChange}/>\n                    \n                <textarea \n                    type=\"text\"\n                    className=\"notes__textarea\"\n                    name=\"body\"\n                    placeholder=\"Qué pasó el día de hoy?\"\n                    value={body}\n                    onChange={handleInputChange}>\n\n                    </textarea>\n            </div>\n            <div \n                onClick={handleDelete}\n                className=\"notes__button\">\n                <p>Delete</p>\n            </div>\n        </div>\n    )\n}\n","import { useSelector } from \"react-redux\";\n\nexport const NothingSelected = () => {\n    const {name,lastName} = useSelector(state => state.auth.user);\n    return (\n        <div className=\"journal__nothing\">\n            <p className=\"journal__title\">¡Bienvenido {name +\" \"+ lastName}!</p>\n            <p>Seleccione una nota</p>\n            <p>O cree una nueva entrada</p>\n            <i className=\"far fa-star fa-5x\"></i>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setActiveNote } from '../../features/notes/notesSlice';\nimport moment from 'moment';\n\nexport const NewEntry = ({id,title,body,date}) => {\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n        const note = {\n            id,\n            title,\n            body,\n            date\n        }\n        dispatch(setActiveNote(note));\n    }\n\n    return (\n        <div \n            className=\"journal__entry\"\n            onClick={handleClick}>\n            \n            <div className=\"journal__text\">\n                <strong><p>{title}</p></strong>\n                <p className=\"journal__text-body\">{body}</p>\n            </div>\n            <div className=\"journal__date\">\n                <span>{moment(date).format('dddd')}</span>\n                <h4>{moment(date).format('Do')}</h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { NewEntry } from './NewEntry'\n\nexport const JournalEntries = () => {\n    const {notes} = useSelector(state => state.notes);\n\n    return (\n        <div className=\"journal__entries animate__animated animate__fadeInDown\">\n            {\n                notes && \n                notes.map(e => \n                    <NewEntry \n                        key={e.id} \n                        id={e.id}\n                        title={e.title}\n                        body={e.body}\n                        date={e.date}/>\n                )\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userLogOut } from '../../features/auth/authSlice';\nimport { clearNotes, setActiveNote, startNewNote } from '../../features/notes/notesSlice';\nimport { JournalEntries } from './JournalEntries'\n\n\nexport const Sidebar = () => {\n    const dispatch = useDispatch();\n\n    const {user} = useSelector(state => state.auth);\n\n    const handleCreateNewEntry = () => {\n        dispatch(startNewNote());\n      \n    }\n\n    const handleLogOut = () => {\n        dispatch(setActiveNote(null));\n        dispatch(clearNotes()); \n        dispatch(userLogOut());\n    }\n\n    return (\n        \n        <div className=\"sidebar\">\n            \n            <div className=\"sidebar__top\">\n               \n                <p>{user.name} {user.lastName}</p>\n                <button \n                    className=\"btn btn-danger\"\n                    onClick={handleLogOut}>\n                    Cerrar sesión\n                </button>\n            </div>\n\n            <div \n                className=\"sidebar__icon\" \n                onClick={handleCreateNewEntry}>\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p>Crea una nueva entrada</p>\n            </div>\n            <JournalEntries />\n        </div>\n    )\n}\n","import React from 'react'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startGetNotes } from '../../features/notes/notesSlice'\nimport { NotesScreen } from '../notes/NotesScreen'\nimport { NothingSelected } from './NothingSelected'\nimport { Sidebar } from './Sidebar'\n\nexport const JournalScreen = () => {\n\n    const {active} = useSelector(state => state.notes);\n    const {user} = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(startGetNotes(user.id));\n        \n    }, [dispatch,user.id])\n\n    return (\n        <div className=\"journal  animate__animated animate__fadeInLeftBig\">\n            <Sidebar/>\n            {active?<NotesScreen/>:<NothingSelected />}\n            \n        </div>\n    )\n}\n","import React, {  useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport validator from 'validator';\nimport { useDispatch,useSelector } from 'react-redux';\nimport {  clearMsgError, startUserLogin} from '../../features/auth/authSlice';\n\nexport const LoginScreen = () => {\n\n    const [values,handleInputChange] = useForm({\n        email:'',\n        password:''\n    });\n    const {email,password} = values;\n    const dispatch = useDispatch();\n    const [isValid, setIsValid] = useState({\n        isValidEmail:true,\n        msgEmail:null,\n        isValidPassword:true,\n        msgPassword:null\n    });\n    const {isValidEmail,isValidPassword,msgEmail,msgPassword}= isValid;\n    const {msgError} = useSelector(state => state.auth);\n\n    const handleLogIn = (e) => {\n   \n        e.preventDefault();\n        if(!validator.isEmail(email) ){\n            return setIsValid((state)=>{\n                return {\n                    ...state,\n                    isValidEmail:false,\n                    msgEmail:'Correo no valido'\n                }\n            });\n        }else{\n            setIsValid((state)=>{\n                return {\n                    ...state,\n                    isValidEmail:true,\n                    msgEmail:''\n                }\n            });\n        }\n           \n        if( password.trim().length <8 ){\n            return setIsValid((state)=>{\n                return {\n                    ...state,\n                    isValidPassword:false,\n                    msgPassword:'La contraseña debe tener al menos 8 caracteres'\n                }\n            });\n        } else {\n            setIsValid((state)=>{\n                return {\n                    ...state,\n                    isValidPassword:true,\n                    msgPassword:''\n                }\n            });\n        }\n\n        dispatch(startUserLogin({email,password}));\n    \n    }\n\n    return (\n        <>\n            <div className=\"auth__content-left \">\n                <div className=\"form animate__animated animate__fadeInLeft\">\n                    {msgError && <p className=\"msg-error\">{msgError}</p>}\n                    <form className=\"auth__form\">\n                        <h1>Iniciar sesión</h1>\n                        <div className={isValidEmail ?\"input__container\" : \"input__container error\"}>\n                            <label htmlFor=\"\">\n                                <i className=\"fas fa-envelope\"></i>\n                            </label>\n                            <input\n                                onChange={handleInputChange} \n                                //className=\"input error-input \"\n                                className={isValidEmail ? 'input':'input error-input'}\n                                name=\"email\"\n                                value={email}\n                                autoComplete=\"off\"\n                                placeholder=\"nombre@ejemplo.com\"\n                                type=\"text\" />\n                                \n                        </div>\n                        <p>{msgEmail}</p>\n                        <div className={isValidPassword ?\"input__container\" : \"input__container error\"}>\n                            <label htmlFor=\"\">\n                                <i className=\"fas fa-key\"></i>\n                            </label>\n                            <input \n                                onChange={handleInputChange}\n                                className={isValidPassword? 'input':'input error-input'}\n                                name=\"password\"\n                                placeholder=\"Introduce 6 caracteres o más\"\n                                value={password}\n                                autoComplete=\"off\"\n                                type=\"password\" />\n                                \n                        </div>\n                        <p>{msgPassword}</p>\n                        \n                        <div className=\"btn-group\">\n                            <button\n                                onClick={handleLogIn} \n                                className=\"btn btn-primary btn-block\">\n                                INICIAR SESIÓN\n                            </button>\n\n                        </div>\n                        <p>¿Aún no estas registrado? \n                            <Link\n                                onClick={clearMsgError} \n                                to=\"/auth/register\">Registrate</Link>\n                        </p>\n                    </form>\n                </div>\n            \n            </div>\n            <div className=\"auth__content-right\">\n                <div className=\"auth__img\">\n                    <img src=\"https://images2.alphacoders.com/559/559116.png\" alt=\"logo\" />\n                </div>\n            </div>\n        </>\n    )\n}\n","import { Link } from 'react-router-dom'\nimport { useForm } from '../../hooks/useForm'\nimport validator from 'validator';\nimport { startUserRegister } from '../../features/auth/authSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\n\nexport const RegisterScreen = () => {\n    const [values,handleInputChange] = useForm({\n        email:'',\n        name:'',\n        lastName:'',\n        password:'',\n        password2:''\n    });\n    const {email,password,password2,name,lastName} = values;\n    const {msgError} = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n    const [validValues, setValidValues] = useState({\n        isValidEmail:true,\n        isValidPasword:true,\n        isValidPasword2:true,\n        isValidName:true,\n\n        msgEmail:null,\n        msgName:null,\n        msgPasword:null\n    });\n\n    const {msgEmail,msgName,msgPasword,isValidName,isValidEmail,isValidPasword } = validValues;\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if(name.length <= 0){\n            return setValidValues((state) => {\n                return {\n                    ...state,\n                    msgName:'El nombre no debe estar vacio',\n                    isValidName:false\n                }\n            });\n        }else{\n            setValidValues((state) => {\n                return {\n                    ...state,\n                    msgName:null,\n                    isValidName:true\n                }\n            });\n        }\n\n        if(!validator.isEmail(email) ){\n            return setValidValues((state) => {\n                return {\n                    ...state,\n                    msgEmail:'Correo no valido',\n                    isValidEmail:false\n                }\n            });\n        }else{\n            setValidValues((state) => {\n                return {\n                    ...state,\n                    msgEmail:null,\n                    isValidEmail:true\n                }\n            });\n        }\n\n        if( password.trim().length <=8 || password2.trim().length <=8){\n            return setValidValues((state) => {\n                return {\n                    ...state,\n                    msgPasword:'La contraseña debe tener al menos 8 caracteres',\n                    isValidPasword:false\n                }\n            });\n        }else{\n          setValidValues((state) => {\n                return {\n                    ...state,\n                    msgPasword:null,\n                    isValidPasword:true\n                }\n            });\n        }\n        if(password !== password2){\n            return setValidValues((state) => {\n                return {\n                    ...state,\n                    msgPasword:'Las contraseñas no coinciden',\n                    isValidPasword:false\n                }\n            });\n        }else{\n          setValidValues((state) => {\n                return {\n                    ...state,\n                    msgPasword:null,\n                    isValidPasword:true\n                }\n            });\n        }\n     \n        dispatch(startUserRegister({email,password,name,lastName}));\n\n    }\n\n    return (\n        <>\n            <div className=\"auth__content-left\">\n                \n                <div className=\"form animate__animated animate__fadeInLeft\">\n                    {msgError && <p className=\"msg-error\">{msgError}</p>}\n                    <form className=\"auth__form\">\n                        <h1>Regístrate</h1>\n                        <div className={`input__container ${!isValidName && 'error'}`}>\n                            <label htmlFor=\"\">\n                                <i className=\"fas fa-user\"></i>\n                            </label>\n                            <input \n                                className=\"input\"\n                                name=\"name\"\n                                placeholder=\"Escribe tu nombre\"\n                                value={name}\n                                autoComplete=\"off\"\n                                type=\"text\"\n                                onChange={handleInputChange} />\n                        </div>\n                       <p>{msgName}</p>\n                        <div className=\"input__container\">\n                            <label htmlFor=\"\">\n                                <i className=\"fas fa-signature\"></i>\n                            </label>\n                            <input \n                                className=\"input\"\n                                name=\"lastName\"\n                                placeholder=\"Escribe tu apellido\"\n                                value={lastName}\n                                autoComplete=\"off\"\n                                type=\"text\"\n                                onChange={handleInputChange} />\n                        </div>\n                        <div className={`input__container ${!isValidEmail && 'error '}`}>\n                            <label htmlFor=\"\">\n                                <i className=\"fas fa-envelope\"></i>\n                            </label>\n                            <input \n                                className=\"input\"\n                                name=\"email\"\n                                placeholder=\"nombre@ejemplo.com\"\n                                value={email}\n                                autoComplete=\"off\"\n                                type=\"text\" \n                                onChange={handleInputChange}/>\n                        </div>\n                        <p>{msgEmail}</p>\n                        <div className={`input__container ${!isValidPasword && 'error'}`}>\n                            <label htmlFor=\"\">\n                                <i className=\"fas fa-key\"></i>\n                            </label>\n                            <input \n                                className=\"input\"\n                                name=\"password\"\n                                placeholder=\"Escribe tu contraseña\"\n                                value={password}\n                                autoComplete=\"off\"\n                                type=\"password\" \n                                onChange={handleInputChange}/>\n                        </div>\n                        <p>{msgPasword}</p>\n                        <div className={`input__container ${!isValidPasword && 'error'}`}>\n                            <label htmlFor=\"\">\n                                <i className=\"fas fa-key\"></i>\n                            </label>\n                            <input \n                                className=\"input\"\n                                name=\"password2\"\n                                placeholder=\"Repite tu contraseña\"\n                                value={password2}\n                                autoComplete=\"off\"\n                                type=\"password\"\n                                onChange={handleInputChange} />\n                        </div>\n                        <div className=\"btn-group\">\n                            <button \n                                onClick={handleRegister}\n                                className=\"btn btn-primary btn-block\">\n                                REGISTRATE\n                            </button>\n                        </div>\n                        <p>¿Ya estás registrado? \n                            <Link \n                                to=\"/auth/login\">Inicia sesión</Link>\n                        </p>\n                    </form>\n                </div>\n            </div>\n            <div className=\"auth__content-right\">\n                <div className=\"auth__img\">\n                    <img src=\"https://images2.alphacoders.com/559/559116.png\" alt=\"logo\" />\n                </div>\n            </div>  \n        </>\n    )\n}\n","import React from 'react'\nimport {  BrowserRouter as Router, Route,Switch,Redirect } from 'react-router-dom'\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <Router>\n            <div className=\"auth\">\n                <Switch>\n                    <Route \n                        exact\n                        path='/auth/login'\n                        component={LoginScreen}\n                        \n                    />\n\n                    <Route\n                        exact\n                        path='/auth/register'\n                        component={RegisterScreen}\n                        \n                    />\n\n                    <Redirect to='/auth/login'/>\n            \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nexport const PrivateRoutes = ({isLoggedIn,component:Component,...rest}) => {\n\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isLoggedIn)?\n                <Component {...props}/>\n                :<Redirect to ='/auth'/>\n            )}\n        \n        />\n            \n        \n    )\n}\n\nPrivateRoutes.propTypes = {\n    isLoggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n\n","\nimport { Redirect, Route } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\n//export const PublicRoutes = ({exact,isLoggedIn,component:Component,path}) => {\n    //en rest se guarda el resto de props osea, exact y path que mandamos de approuter\nexport const PublicRoutes = ({isLoggedIn,component:Component,...rest}) => {\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (!isLoggedIn)?\n                <Component {...props}/>\n                :<Redirect to=\"/\"/>\n            )}\n        />\n\n    )\n}\n\nPublicRoutes.propTypes = {\n    isLoggedIn:PropTypes.bool.isRequired,\n    component:PropTypes.func.isRequired\n}\n\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from \"react-router-dom\";\nimport { LoadingScreen } from '../components/auth/LoadingScreen';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { startChecking } from '../features/auth/authSlice';\nimport { AuthRouter } from './AuthRouter';\nimport { PrivateRoutes } from './PrivateRoutes';\nimport { PublicRoutes } from './PublicRoutes';\n\nexport const AppRouter = () => {\n\n    const {user,checking} = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        console.log('checking');\n        dispatch(startChecking());\n    }, [dispatch]);\n\n    if(checking){\n        return <LoadingScreen/>\n    }\n\n    return (\n        <Router>\n\n            <div className=\"main\">\n                <Switch>\n\n                    <PublicRoutes\n                        path='/auth'\n                        component={AuthRouter}\n                        isLoggedIn={!!user.id}\n                    />\n\n                    <PrivateRoutes\n                        exact\n                        path='/'\n                        component={JournalScreen}\n                        isLoggedIn={!!user.id} \n                    />\n\n                    <Redirect to='/'/>\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\n//import { JournalScreen } from './components/journal/JournalScreen'\nimport { store } from \"./store/store\";\nimport { Provider } from 'react-redux'\nimport { AppRouter } from './routes/AppRouter';\nexport const JournalApp = () => {\n\n    return (\n        <Provider store={store}>\n            <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport \"./styles/styles.scss\";\n\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}